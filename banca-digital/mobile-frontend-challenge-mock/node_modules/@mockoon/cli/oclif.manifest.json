{
  "commands": {
    "dockerize": {
      "aliases": [],
      "args": {},
      "description": "Copy (or download) all the provided data files locally and create a Dockerfile to build a self-contained image of one or more mock API",
      "examples": [
        "$ mockoon-cli dockerize --data ~/data.json --output ./folder/Dockerfile",
        "$ mockoon-cli dockerize --data ~/data1.json ~/data2.json --output ./folder/Dockerfile",
        "$ mockoon-cli dockerize --data https://file-server/data.json --output ./folder/Dockerfile"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "log-transaction": {
          "char": "t",
          "description": "Log the full HTTP transaction (request and response)",
          "name": "log-transaction",
          "allowNo": false,
          "type": "boolean"
        },
        "data": {
          "char": "d",
          "description": "Path(s) or URL(s) to your Mockoon data file(s)",
          "name": "data",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "port": {
          "char": "p",
          "description": "Ports to expose in the Docker container. It should match the number of environment data files you provide with the --data flag.",
          "name": "port",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "output": {
          "char": "o",
          "description": "Generated Dockerfile path and name (e.g. `./folder/Dockerfile`)",
          "name": "output",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "dockerize",
      "pluginAlias": "@mockoon/cli",
      "pluginName": "@mockoon/cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "dist",
        "commands",
        "dockerize.js"
      ]
    },
    "export": {
      "aliases": [],
      "args": {},
      "description": "Export a mock API to an OpenAPI v3 specification file (JSON)",
      "examples": [
        "$ mockoon-cli export --input ~/data.json --output ./output.json",
        "$ mockoon-cli export --input ~/data.json --output ./output.json --prettify"
      ],
      "flags": {
        "input": {
          "char": "i",
          "description": "Path or URL to your Mockoon data file",
          "name": "input",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output": {
          "char": "o",
          "description": "Generated OpenApi v3 path and name (e.g. `./output.json`)",
          "name": "output",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "prettify": {
          "char": "p",
          "description": "Prettify output",
          "name": "prettify",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "export",
      "pluginAlias": "@mockoon/cli",
      "pluginName": "@mockoon/cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "dist",
        "commands",
        "export.js"
      ]
    },
    "import": {
      "aliases": [],
      "args": {},
      "description": "Import a Swagger v2/OpenAPI v3 specification file (YAML or JSON)",
      "examples": [
        "$ mockoon-cli import --input ~/data.json --output ./output.json",
        "$ mockoon-cli import --input ~/data.json --output ./output.json --prettify"
      ],
      "flags": {
        "input": {
          "char": "i",
          "description": "Path or URL to your Swagger v2/OpenAPI v3 file",
          "name": "input",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output": {
          "char": "o",
          "description": "Generated Mockoon path and name (e.g. `./environment.json`)",
          "name": "output",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "prettify": {
          "char": "p",
          "description": "Prettify output",
          "name": "prettify",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "import",
      "pluginAlias": "@mockoon/cli",
      "pluginName": "@mockoon/cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "dist",
        "commands",
        "import.js"
      ]
    },
    "start": {
      "aliases": [],
      "args": {},
      "description": "Start one or more mock API",
      "examples": [
        "$ mockoon-cli start --data ~/data.json",
        "$ mockoon-cli start --data ~/data1.json ~/data2.json --port 3000 3001 --hostname 127.0.0.1 192.168.1.1",
        "$ mockoon-cli start --data https://file-server/data.json",
        "$ mockoon-cli start --data ~/data.json --log-transaction",
        "$ mockoon-cli start --data ~/data.json --disable-routes route1 route2",
        "$ mockoon-cli start --data ~/data.json --enable-random-latency"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "log-transaction": {
          "char": "t",
          "description": "Log the full HTTP transaction (request and response)",
          "name": "log-transaction",
          "allowNo": false,
          "type": "boolean"
        },
        "data": {
          "char": "d",
          "description": "Path(s) or URL(s) to your Mockoon data file(s)",
          "name": "data",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "hostname": {
          "char": "l",
          "description": "Listening hostname(s)",
          "name": "hostname",
          "default": [],
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "port": {
          "char": "p",
          "description": "Override environment(s) port(s)",
          "name": "port",
          "default": [],
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "repair": {
          "char": "r",
          "description": "If the data file seems too old, or an invalid Mockoon file, migrate/repair without prompting",
          "name": "repair",
          "allowNo": false,
          "type": "boolean"
        },
        "disable-log-to-file": {
          "char": "X",
          "description": "Only log to stdout and stderr",
          "name": "disable-log-to-file",
          "allowNo": false,
          "type": "boolean"
        },
        "disable-routes": {
          "char": "e",
          "description": "Disable route(s) by UUID or keyword present in the route's path or keyword present in a folder name (do not include a leading slash)",
          "name": "disable-routes",
          "default": [],
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "faker-locale": {
          "char": "c",
          "description": "Faker locale (e.g. 'en', 'en_GB', etc. For supported locales, see documentation: https://github.com/mockoon/mockoon/blob/main/packages/cli/README.md#fakerjs-options)",
          "name": "faker-locale",
          "default": "en",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "faker-seed": {
          "char": "s",
          "description": "Number for the Faker.js seed (e.g. 1234)",
          "name": "faker-seed",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "env-vars-prefix": {
          "char": "x",
          "description": "Prefix of environment variables available at runtime (default: \"MOCKOON_\")",
          "name": "env-vars-prefix",
          "default": "MOCKOON_",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "disable-admin-api": {
          "description": "Disable the admin API, enabled by default (more info: https://mockoon.com/docs/latest/admin-api/overview/)",
          "name": "disable-admin-api",
          "allowNo": false,
          "type": "boolean"
        },
        "disable-tls": {
          "description": "Disable TLS for all environments. TLS configuration is part of the environment configuration (more info: https://mockoon.com/docs/latest/server-configuration/serving-over-tls/).",
          "name": "disable-tls",
          "allowNo": false,
          "type": "boolean"
        },
        "max-transaction-logs": {
          "description": "Maximum number of transaction logs to keep in memory for retrieval via the admin API (default: 100).",
          "name": "max-transaction-logs",
          "default": 100,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "enable-random-latency": {
          "description": "Enable random latency from 0 to value specified in the route settings",
          "name": "enable-random-latency",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "start",
      "pluginAlias": "@mockoon/cli",
      "pluginName": "@mockoon/cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "dist",
        "commands",
        "start.js"
      ]
    }
  },
  "version": "8.4.0"
}