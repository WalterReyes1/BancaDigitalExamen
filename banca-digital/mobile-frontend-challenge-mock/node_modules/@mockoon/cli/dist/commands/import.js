"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const fs_1 = require("fs");
const data_1 = require("../libs/data");
class Import extends core_1.Command {
    async run() {
        const { flags: userFlags } = await this.parse(Import);
        try {
            const parsedEnvironments = await (0, data_1.parseDataFiles)([userFlags.input]);
            const data = JSON.stringify(parsedEnvironments[0].environment, null, userFlags.prettify ? 2 : 0);
            await fs_1.promises.writeFile(userFlags.output, data, 'utf-8');
        }
        catch (error) {
            this.error(error.message);
        }
    }
}
Import.description = 'Import a Swagger v2/OpenAPI v3 specification file (YAML or JSON)';
Import.examples = [
    '$ mockoon-cli import --input ~/data.json --output ./output.json',
    '$ mockoon-cli import --input ~/data.json --output ./output.json --prettify'
];
Import.flags = {
    input: core_1.Flags.string({
        char: 'i',
        description: 'Path or URL to your Swagger v2/OpenAPI v3 file',
        required: true
    }),
    output: core_1.Flags.string({
        char: 'o',
        description: 'Generated Mockoon path and name (e.g. `./environment.json`)',
        required: true
    }),
    prettify: core_1.Flags.boolean({
        char: 'p',
        description: 'Prettify output',
        default: false
    })
};
exports.default = Import;
//# sourceMappingURL=import.js.map