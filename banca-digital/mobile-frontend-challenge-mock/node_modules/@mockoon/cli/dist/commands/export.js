"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commons_server_1 = require("@mockoon/commons-server");
const core_1 = require("@oclif/core");
const fs_1 = require("fs");
const data_1 = require("../libs/data");
class Export extends core_1.Command {
    async run() {
        const { flags: userFlags } = await this.parse(Export);
        try {
            const parsedEnvironments = await (0, data_1.parseDataFiles)([userFlags.input]);
            const openApiConverter = new commons_server_1.OpenAPIConverter();
            const data = await openApiConverter.convertToOpenAPIV3(parsedEnvironments[0].environment, userFlags.prettify);
            await fs_1.promises.writeFile(userFlags.output, data, 'utf-8');
        }
        catch (error) {
            this.error(error.message);
        }
    }
}
Export.description = 'Export a mock API to an OpenAPI v3 specification file (JSON)';
Export.examples = [
    '$ mockoon-cli export --input ~/data.json --output ./output.json',
    '$ mockoon-cli export --input ~/data.json --output ./output.json --prettify'
];
Export.flags = {
    input: core_1.Flags.string({
        char: 'i',
        description: 'Path or URL to your Mockoon data file',
        required: true
    }),
    output: core_1.Flags.string({
        char: 'o',
        description: 'Generated OpenApi v3 path and name (e.g. `./output.json`)',
        required: true
    }),
    prettify: core_1.Flags.boolean({
        char: 'p',
        description: 'Prettify output',
        default: false
    })
};
exports.default = Export;
//# sourceMappingURL=export.js.map