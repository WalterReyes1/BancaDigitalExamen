"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateParser = void 0;
const handlebars_1 = require("handlebars");
const data_helpers_1 = require("./templating-helpers/data-helpers");
const faker_wrapper_1 = require("./templating-helpers/faker-wrapper");
const global_helpers_1 = require("./templating-helpers/global-helpers");
const helpers_1 = require("./templating-helpers/helpers");
const request_helpers_1 = require("./templating-helpers/request-helpers");
const response_helpers_1 = require("./templating-helpers/response-helpers");
const system_helpers_1 = require("./templating-helpers/system-helpers");
/**
 * Parse a content with Handlebars
 * @param shouldOmitDataHelper
 * @param content
 * @param environment
 * @param processedDatabuckets
 * @param request
 */
const TemplateParser = function ({ shouldOmitDataHelper, content, environment, processedDatabuckets, globalVariables, request, response, envVarsPrefix }) {
    let helpers = Object.assign(Object.assign(Object.assign(Object.assign({}, faker_wrapper_1.FakerWrapper), helpers_1.Helpers), (0, global_helpers_1.GlobalHelpers)(globalVariables)), (0, system_helpers_1.SystemHelpers)({ prefix: envVarsPrefix }));
    if (!shouldOmitDataHelper) {
        helpers = Object.assign(Object.assign({}, helpers), (0, data_helpers_1.DataHelpers)(processedDatabuckets));
    }
    if (request) {
        helpers = Object.assign(Object.assign({}, helpers), (0, request_helpers_1.RequestHelpers)(request, environment));
    }
    if (response) {
        helpers = Object.assign(Object.assign({}, helpers), (0, response_helpers_1.ResponseHelpers)(response));
    }
    try {
        return (0, handlebars_1.compile)(content)({}, {
            helpers
        });
    }
    catch (error) {
        throw error;
    }
};
exports.TemplateParser = TemplateParser;
//# sourceMappingURL=template-parser.js.map