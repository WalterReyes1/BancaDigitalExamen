"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const date_fns_1 = require("date-fns");
const utils_1 = require("../../utils");
const dateTimeShift = function (options) {
    let date;
    let format;
    if (typeof options === 'object' && options.hash) {
        date = (0, utils_1.fromSafeString)(options.hash['date']);
        format = (0, utils_1.fromSafeString)(options.hash['format']);
    }
    // If no date is specified, default to now. If a string is specified, then parse it to a date.
    const dateToShift = date === undefined
        ? new Date()
        : typeof date === 'string'
            ? new Date(date)
            : date;
    if (typeof options === 'object' && options !== null && options.hash) {
        const days = (0, utils_1.numberFromSafeString)(options.hash['days']);
        const months = (0, utils_1.numberFromSafeString)(options.hash['months']);
        const years = (0, utils_1.numberFromSafeString)(options.hash['years']);
        const hours = (0, utils_1.numberFromSafeString)(options.hash['hours']);
        const minutes = (0, utils_1.numberFromSafeString)(options.hash['minutes']);
        const seconds = (0, utils_1.numberFromSafeString)(options.hash['seconds']);
        if (!isNaN(days)) {
            dateToShift.setDate(dateToShift.getDate() + days);
        }
        if (!isNaN(months)) {
            dateToShift.setMonth(dateToShift.getMonth() + months);
        }
        if (!isNaN(years)) {
            dateToShift.setFullYear(dateToShift.getFullYear() + years);
        }
        if (!isNaN(hours)) {
            dateToShift.setHours(dateToShift.getHours() + hours);
        }
        if (!isNaN(minutes)) {
            dateToShift.setMinutes(dateToShift.getMinutes() + minutes);
        }
        if (!isNaN(seconds)) {
            dateToShift.setSeconds(dateToShift.getSeconds() + seconds);
        }
    }
    return (0, date_fns_1.format)(dateToShift, typeof format === 'string' ? format : "yyyy-MM-dd'T'HH:mm:ss.SSSxxx", {
        useAdditionalWeekYearTokens: true,
        useAdditionalDayOfYearTokens: true
    });
};
exports.default = dateTimeShift;
//# sourceMappingURL=dateTimeShift.js.map