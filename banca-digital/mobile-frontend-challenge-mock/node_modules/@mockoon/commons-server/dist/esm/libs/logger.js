import { createLogger, format as logFormat, transports as logsTransports } from 'winston';
export const createLoggerInstance = (fileTransportOptions) => {
    const transportsInstances = [new logsTransports.Console({ handleExceptions: true })];
    if (fileTransportOptions) {
        transportsInstances.push(new logsTransports.File(Object.assign(Object.assign({}, fileTransportOptions), { handleExceptions: true })));
    }
    return createLogger({
        level: 'info',
        format: logFormat.combine(logFormat.timestamp(), logFormat.json()),
        transports: transportsInstances,
        exitOnError: false
    });
};
//# sourceMappingURL=logger.js.map